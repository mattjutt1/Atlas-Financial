---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: gp2  # Use appropriate storage class for your cluster
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: atlas-postgres
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: atlas-postgres
spec:
  serviceName: atlas-postgres
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: atlas-financial
      app.kubernetes.io/component: database
      app.kubernetes.io/instance: atlas-postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: atlas-financial
        app.kubernetes.io/component: database
        app.kubernetes.io/instance: atlas-postgres
    spec:
      serviceAccountName: atlas-financial-sa
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        runAsNonRoot: true
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgres
          protocol: TCP
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_MULTIPLE_DATABASES
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: POSTGRES_MULTIPLE_DATABASES
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - atlas
            - -d
            - atlas_financial
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - atlas
            - -d
            - atlas_financial
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-scripts
        configMap:
          name: postgres-init-scripts
          defaultMode: 0755
---
apiVersion: v1
kind: Service
metadata:
  name: atlas-postgres
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: atlas-postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: atlas-postgres
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: postgres-exporter
spec:
  type: ClusterIP
  ports:
  - port: 9187
    targetPort: 9187
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: postgres-exporter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: postgres-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: atlas-financial
      app.kubernetes.io/component: postgres-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: atlas-financial
        app.kubernetes.io/component: postgres-exporter
    spec:
      serviceAccountName: atlas-financial-sa
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        runAsNonRoot: true
      containers:
      - name: postgres-exporter
        image: prometheuscommunity/postgres-exporter:v0.15.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9187
          name: metrics
          protocol: TCP
        env:
        - name: DATA_SOURCE_NAME
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@atlas-postgres.atlas-financial.svc.cluster.local:5432/atlas_financial?sslmode=disable"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: POSTGRES_PASSWORD
        - name: PG_EXPORTER_WEB_LISTEN_ADDRESS
          value: ":9187"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9187
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9187
          initialDelaySeconds: 5
          periodSeconds: 5
