---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: atlas-supertokens
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: authentication
    app.kubernetes.io/instance: atlas-supertokens
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: atlas-financial
      app.kubernetes.io/component: authentication
      app.kubernetes.io/instance: atlas-supertokens
  template:
    metadata:
      labels:
        app.kubernetes.io/name: atlas-financial
        app.kubernetes.io/component: authentication
        app.kubernetes.io/instance: atlas-supertokens
    spec:
      serviceAccountName: atlas-financial-sa
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
      containers:
      - name: supertokens
        image: registry.supertokens.io/supertokens/supertokens-postgresql:9.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3567
          name: http
          protocol: TCP
        env:
        - name: POSTGRESQL_CONNECTION_URI
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@atlas-postgres.atlas-financial.svc.cluster.local:5432/supertokens"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: POSTGRES_PASSWORD
        - name: API_KEYS
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: SUPERTOKENS_API_KEY
        - name: SUPERTOKENS_HOST
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: SUPERTOKENS_HOST
        - name: SUPERTOKENS_PORT
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: SUPERTOKENS_PORT
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /hello
            port: 3567
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /hello
            port: 3567
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /hello
            port: 3567
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: atlas-supertokens
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: authentication
    app.kubernetes.io/instance: atlas-supertokens
spec:
  type: ClusterIP
  ports:
  - port: 3567
    targetPort: 3567
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: authentication
    app.kubernetes.io/instance: atlas-supertokens
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: atlas-supertokens-hpa
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: authentication
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: atlas-supertokens
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60