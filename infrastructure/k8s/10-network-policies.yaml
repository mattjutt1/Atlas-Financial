---
# Default deny all ingress traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Allow DNS resolution
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
# PostgreSQL network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-network-policy
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: database
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from application services
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: authentication  # SuperTokens
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: api-gateway      # Hasura
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: finance-manager  # Firefly III
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: observability    # Grafana
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: postgres-exporter
    ports:
    - protocol: TCP
      port: 5432
  egress:
  # Allow outbound DNS and health checks
  - {}
---
# Redis network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-network-policy
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: cache
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from application services
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: finance-manager    # Firefly III
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: rust-financial-engine  # Rust Engine
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: redis-exporter
    ports:
    - protocol: TCP
      port: 6379
  egress:
  # Allow outbound DNS
  - {}
---
# SuperTokens network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: supertokens-network-policy
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: authentication
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from frontend, Hasura, and ingress
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: frontend          # Frontend
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: api-gateway       # Hasura
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx                             # Ingress controller
    ports:
    - protocol: TCP
      port: 3567
  egress:
  # Allow outbound to PostgreSQL and DNS
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: database
    ports:
    - protocol: TCP
      port: 5432
  - {}  # DNS
---
# Hasura network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hasura-network-policy
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: api-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from frontend and ingress
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: frontend          # Frontend
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx                             # Ingress controller
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow outbound to PostgreSQL, SuperTokens, and DNS
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: database          # PostgreSQL
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: authentication    # SuperTokens
    ports:
    - protocol: TCP
      port: 3567
  - {}  # DNS and external services
---
# Firefly III network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: firefly-network-policy
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: finance-manager
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from ingress and internal services
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx                             # Ingress controller
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: ai-engine         # AI Engine
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow outbound to PostgreSQL, Redis, and DNS
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: database          # PostgreSQL
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: cache             # Redis
    ports:
    - protocol: TCP
      port: 6379
  - {}  # DNS and external services
---
# Grafana network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: grafana-network-policy
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: observability
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from ingress
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx                             # Ingress controller
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow outbound to PostgreSQL, Prometheus, and DNS
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: database          # PostgreSQL
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: monitoring         # Prometheus
    ports:
    - protocol: TCP
      port: 9090
  - {}  # DNS and external services
---
# Prometheus network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: prometheus-network-policy
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: monitoring
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from Grafana and ingress
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: observability      # Grafana
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx                             # Ingress controller
    ports:
    - protocol: TCP
      port: 9090
  egress:
  # Allow outbound to all services for metric scraping and DNS
  - to: []
    ports:
    - protocol: TCP
      port: 9187  # PostgreSQL exporter
    - protocol: TCP
      port: 9121  # Redis exporter
    - protocol: TCP
      port: 8080  # Application metrics
    - protocol: TCP
      port: 3000  # Frontend metrics
    - protocol: TCP
      port: 3567  # SuperTokens metrics
  - {}  # DNS and Kubernetes API
---
# Exporters network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: exporters-network-policy
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: atlas-financial
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from Prometheus
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: monitoring         # Prometheus
    ports:
    - protocol: TCP
      port: 9187  # PostgreSQL exporter
    - protocol: TCP
      port: 9121  # Redis exporter
  egress:
  # Allow outbound to databases and DNS
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: database          # PostgreSQL
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: cache             # Redis
    ports:
    - protocol: TCP
      port: 6379
  - {}  # DNS
---
# Frontend network policy (placeholder for future implementation)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-network-policy
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from ingress
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx                             # Ingress controller
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow outbound to API services and DNS
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: api-gateway       # Hasura
    ports:
    - protocol: TCP
      port: 8080
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: authentication    # SuperTokens
    ports:
    - protocol: TCP
      port: 3567
  - {}  # DNS and external services
