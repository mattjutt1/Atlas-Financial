---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2  # Use appropriate storage class for your cluster
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: cache
data:
  redis.conf: |
    # Redis production configuration
    bind 0.0.0.0
    port 6379

    # Security
    protected-mode yes

    # Persistence
    appendonly yes
    appendfsync everysec
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

    # Memory management
    maxmemory-policy allkeys-lru

    # Logging
    loglevel notice

    # Performance
    tcp-keepalive 300
    timeout 0

    # Disable dangerous commands
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    rename-command DEBUG ""
    rename-command CONFIG ""
    rename-command SHUTDOWN SHUTDOWN_REDIS
    rename-command EVAL ""
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: atlas-redis
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: cache
    app.kubernetes.io/instance: atlas-redis
spec:
  serviceName: atlas-redis
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: atlas-financial
      app.kubernetes.io/component: cache
      app.kubernetes.io/instance: atlas-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: atlas-financial
        app.kubernetes.io/component: cache
        app.kubernetes.io/instance: atlas-redis
    spec:
      serviceAccountName: atlas-financial-sa
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        runAsNonRoot: true
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        command:
        - redis-server
        - /etc/redis/redis.conf
        - --requirepass
        - $(REDIS_PASSWORD)
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - --no-auth-warning
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - --no-auth-warning
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
      - name: redis-config
        configMap:
          name: redis-config
---
apiVersion: v1
kind: Service
metadata:
  name: atlas-redis
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: cache
    app.kubernetes.io/instance: atlas-redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: cache
    app.kubernetes.io/instance: atlas-redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: redis-exporter
spec:
  type: ClusterIP
  ports:
  - port: 9121
    targetPort: 9121
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: redis-exporter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-exporter
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: redis-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: atlas-financial
      app.kubernetes.io/component: redis-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: atlas-financial
        app.kubernetes.io/component: redis-exporter
    spec:
      serviceAccountName: atlas-financial-sa
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        runAsNonRoot: true
      containers:
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.61.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9121
          name: metrics
          protocol: TCP
        env:
        - name: REDIS_ADDR
          value: "redis://atlas-redis.atlas-financial.svc.cluster.local:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9121
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9121
          initialDelaySeconds: 5
          periodSeconds: 5
