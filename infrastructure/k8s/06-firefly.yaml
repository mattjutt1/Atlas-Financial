---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: firefly-upload-pvc
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: finance-manager
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2  # Use appropriate storage class for your cluster
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: atlas-firefly
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: finance-manager
    app.kubernetes.io/instance: atlas-firefly
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: atlas-financial
      app.kubernetes.io/component: finance-manager
      app.kubernetes.io/instance: atlas-firefly
  template:
    metadata:
      labels:
        app.kubernetes.io/name: atlas-financial
        app.kubernetes.io/component: finance-manager
        app.kubernetes.io/instance: atlas-firefly
    spec:
      serviceAccountName: atlas-financial-sa
      securityContext:
        runAsUser: 33  # www-data user in Firefly III container
        runAsGroup: 33
        runAsNonRoot: true
        fsGroup: 33
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command:
        - sh
        - -c
        - |
          until pg_isready -h atlas-postgres.atlas-financial.svc.cluster.local -p 5432 -U atlas; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
      containers:
      - name: firefly
        image: fireflyiii/core:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: APP_KEY
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: FIREFLY_APP_KEY
        - name: DB_CONNECTION
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_DB_CONNECTION
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_DB_PORT
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_DB_DATABASE
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: POSTGRES_PASSWORD
        - name: APP_URL
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_APP_URL
        - name: TRUSTED_PROXIES
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_TRUSTED_PROXIES
        - name: LOG_CHANNEL
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_LOG_CHANNEL
        - name: APP_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_APP_LOG_LEVEL
        - name: AUTHENTICATION_GUARD
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_AUTHENTICATION_GUARD
        - name: AUTHENTICATION_GUARD_HEADER
          valueFrom:
            configMapKeyRef:
              name: atlas-financial-config
              key: FIREFLY_AUTHENTICATION_GUARD_HEADER
        # Production optimizations
        - name: APP_ENV
          value: "production"
        - name: APP_DEBUG
          value: "false"
        - name: CACHE_DRIVER
          value: "redis"
        - name: SESSION_DRIVER
          value: "redis"
        - name: QUEUE_DRIVER
          value: "redis"
        - name: REDIS_HOST
          value: "atlas-redis.atlas-financial.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: atlas-financial-secrets
              key: REDIS_PASSWORD
        # Security headers
        - name: MAIL_MAILER
          value: "log"
        - name: SEND_REGISTRATION_MAIL
          value: "false"
        - name: SEND_ERROR_MESSAGE
          value: "false"
        volumeMounts:
        - name: firefly-upload
          mountPath: /var/www/html/storage/upload
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 15
      volumes:
      - name: firefly-upload
        persistentVolumeClaim:
          claimName: firefly-upload-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: atlas-firefly
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: finance-manager
    app.kubernetes.io/instance: atlas-firefly
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: finance-manager
    app.kubernetes.io/instance: atlas-firefly
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: atlas-firefly-hpa
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: finance-manager
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: atlas-firefly
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
