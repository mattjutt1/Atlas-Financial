---
apiVersion: v1
kind: Secret
metadata:
  name: atlas-financial-secrets
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database credentials
  POSTGRES_PASSWORD: "REPLACE_WITH_PRODUCTION_POSTGRES_PASSWORD"
  POSTGRES_USER: "atlas"
  
  # Redis credentials
  REDIS_PASSWORD: "REPLACE_WITH_PRODUCTION_REDIS_PASSWORD"
  
  # Application secrets
  HASURA_ADMIN_SECRET: "REPLACE_WITH_PRODUCTION_HASURA_ADMIN_SECRET"
  SUPERTOKENS_API_KEY: "REPLACE_WITH_PRODUCTION_SUPERTOKENS_API_KEY"
  FIREFLY_APP_KEY: "REPLACE_WITH_PRODUCTION_FIREFLY_APP_KEY"
  
  # Grafana credentials
  GRAFANA_ADMIN_PASSWORD: "REPLACE_WITH_PRODUCTION_GRAFANA_PASSWORD"
  
  # NextAuth secret for frontend
  NEXTAUTH_SECRET: "REPLACE_WITH_PRODUCTION_NEXTAUTH_SECRET"
---
apiVersion: v1
kind: Secret
metadata:
  name: atlas-financial-tls
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # These should be replaced with real certificates in production
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: atlas-financial-config
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: config
data:
  # Database configuration
  POSTGRES_DB: "atlas_financial"
  POSTGRES_MULTIPLE_DATABASES: "firefly,hasura,grafana,supertokens"
  
  # Application URLs and endpoints
  HASURA_GRAPHQL_ENDPOINT: "http://atlas-hasura.atlas-financial.svc.cluster.local:8080/v1/graphql"
  SUPERTOKENS_CONNECTION_URI: "http://atlas-supertokens.atlas-financial.svc.cluster.local:3567"
  FIREFLY_APP_URL: "https://firefly.atlas-financial.com"
  GRAFANA_URL: "https://grafana.atlas-financial.com"
  
  # Redis configuration
  REDIS_URL: "redis://:$(REDIS_PASSWORD)@atlas-redis.atlas-financial.svc.cluster.local:6379"
  
  # Hasura configuration
  HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
  HASURA_GRAPHQL_DEV_MODE: "false"
  HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup,http-log,webhook-log,websocket-log,query-log"
  HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
  
  # SuperTokens configuration  
  SUPERTOKENS_HOST: "0.0.0.0"
  SUPERTOKENS_PORT: "3567"
  
  # Firefly III configuration
  FIREFLY_DB_CONNECTION: "pgsql"
  FIREFLY_DB_HOST: "atlas-postgres.atlas-financial.svc.cluster.local"
  FIREFLY_DB_PORT: "5432"
  FIREFLY_DB_DATABASE: "firefly"
  FIREFLY_DB_USERNAME: "atlas"
  FIREFLY_TRUSTED_PROXIES: "**"
  FIREFLY_LOG_CHANNEL: "stdout"
  FIREFLY_APP_LOG_LEVEL: "info"
  FIREFLY_AUTHENTICATION_GUARD: "web"
  FIREFLY_AUTHENTICATION_GUARD_HEADER: "REMOTE_USER"
  
  # Grafana configuration
  GF_SECURITY_ADMIN_USER: "admin"
  GF_DATABASE_TYPE: "postgres"
  GF_DATABASE_HOST: "atlas-postgres.atlas-financial.svc.cluster.local:5432"
  GF_DATABASE_NAME: "grafana"
  GF_DATABASE_USER: "atlas"
  GF_INSTALL_PLUGINS: "grafana-piechart-panel,grafana-worldmap-panel"
  
  # Environment
  NODE_ENV: "production"
  ENVIRONMENT: "production"
  LOG_LEVEL: "info"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: atlas-financial
  labels:
    app.kubernetes.io/name: atlas-financial
    app.kubernetes.io/component: database-init
data:
  create-multiple-databases.sh: |
    #!/bin/bash
    set -e
    set -u

    function create_user_and_database() {
        local database=$1
        echo "  Creating user and database '$database'"
        psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
            CREATE DATABASE $database;
            GRANT ALL PRIVILEGES ON DATABASE $database TO $POSTGRES_USER;
    EOSQL
    }

    if [ -n "$POSTGRES_MULTIPLE_DATABASES" ]; then
        echo "Multiple database creation requested: $POSTGRES_MULTIPLE_DATABASES"
        for db in $(echo $POSTGRES_MULTIPLE_DATABASES | tr ',' ' '); do
            create_user_and_database $db
        done
        echo "Multiple databases created"
    fi