apiVersion: v1
kind: Secret
metadata:
  name: ai-engine-secrets
  namespace: atlas-ai-production
  labels:
    app: ai-engine
    security-tier: high
type: Opaque
stringData:
  jwt-secret: "${JWT_SECRET_KEY}"
  redis-url: "redis://redis-cluster.atlas-ai-production:6379"
  hasura-endpoint: "http://hasura-service.atlas-financial:8081/v1/graphql"
  hasura-admin-secret: "${HASURA_ADMIN_SECRET}"
  postgres-url: "${POSTGRES_CONNECTION_URI}"
  rust-engine-url: "http://rust-financial-engine.atlas-ai-production:8082"
  openai-api-key: "${OPENAI_API_KEY}"
  encryption-key: "${AI_MODEL_ENCRYPTION_KEY}"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-cluster-auth
  namespace: atlas-ai-production
  labels:
    app: redis-cluster
    security-tier: high
type: Opaque
stringData:
  password: "${REDIS_PASSWORD}"
  auth: "${REDIS_AUTH_TOKEN}"
---
apiVersion: v1
kind: Secret
metadata:
  name: timescaledb-secrets
  namespace: atlas-ai-production
  labels:
    app: timescaledb
    security-tier: high
type: Opaque
stringData:
  password: "${TIMESCALEDB_PASSWORD}"
  username: "ai_features_user"
  database: "features"
  connection-string: "postgresql://ai_features_user:${TIMESCALEDB_PASSWORD}@timescaledb.atlas-ai-production:5432/features"
---
apiVersion: v1
kind: Secret
metadata:
  name: model-registry-secrets
  namespace: atlas-ai-production
  labels:
    app: model-registry
    security-tier: high
type: Opaque
stringData:
  mlflow-tracking-uri: "http://mlflow-service.atlas-ai-production:5000"
  s3-access-key: "${S3_ACCESS_KEY}"
  s3-secret-key: "${S3_SECRET_KEY}"
  s3-bucket: "atlas-ai-models-prod"
---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: atlas-monitoring
  labels:
    app: monitoring
    security-tier: medium
type: Opaque
stringData:
  grafana-admin-password: "${GRAFANA_ADMIN_PASSWORD}"
  prometheus-config: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
    - job_name: 'ai-services'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - atlas-ai-production
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: atlas-ai-production
  labels:
    security-tier: high
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTi... # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTi... # Base64 encoded private key