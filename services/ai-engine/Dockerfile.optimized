# Atlas Financial AI Engine - Optimized Production Dockerfile
# Multi-stage build for high-performance production deployment

# Build stage
FROM python:3.12-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    libffi-dev \
    libssl-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir -r requirements.txt

# Add performance-optimized dependencies
RUN pip install --no-cache-dir \
    uvloop \
    httptools \
    psutil \
    orjson \
    aiodns \
    cchardet

# Production stage
FROM python:3.12-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    libffi8 \
    libssl3 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create non-root user for security
RUN groupadd -r atlas && useradd -r -g atlas atlas

# Set up application directory
WORKDIR /app

# Copy application code
COPY --chown=atlas:atlas . .

# Create necessary directories
RUN mkdir -p /app/logs /app/config /app/tmp && \
    chown -R atlas:atlas /app

# Set Python path
ENV PYTHONPATH=/app
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Performance optimizations
ENV PYTHONHASHSEED=random
ENV PYTHONUTF8=1

# Switch to non-root user
USER atlas

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8083/health || exit 1

# Expose ports
EXPOSE 8083 9090

# Default command - use optimized server
CMD ["python", "main_optimized.py"]